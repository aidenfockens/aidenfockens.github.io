{"ast":null,"code":"import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const colors = {\n  primary: '#D32F2F',\n  secondary: '#FFCDD2',\n  complementary: '#388E3C',\n  darkGray: '#333333',\n  lightGray: '#E0E0E0',\n  white: '#FFFFFF',\n  yellow: '#FBC02D',\n  blue: '#0288D1'\n};\n\n// Main content container for each page\n\nexport const PageContainer = styled.div`\n  padding-top: 4rem; /* Space for the fixed navbar */\n  display: flex;  \n  flex-direction:column;\n  justify-content: space-between;\n  margin: 0 auto;\n  max-width: 1200px; /* Limit max-width for larger screens */\n`;\nexport const RowContainer = styled.div`\n  display: flex;\n  flex-direction: row; /* Place LeftContainer and RightContainer side by side */\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 20px; /* Space between assignment rows */\n`;\n\n// Left container for text\nexport const LeftContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n  background-color: ${colors.lightGray};\n  border-radius: 20px 0 0 20px;\n`;\n\n// Right container for images\nexport const RightContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${colors.lightGray};\n  border-radius: 0 20px 20px 0;\n`;\n\n// Image container\nexport const ImageContainer = styled.div`\n  width: 80%;\n  max-width: 600px; /* Max-width for images */\n  margin-bottom: 20px;\n  \n  img {\n    width: 100%;\n    height: auto;\n    border-radius: 8px; /* Optional: rounded corners for the image */\n  }\n`;\n\n// Caption container for text below the image\nexport const CaptionContainer = styled.div`\n  font-size: 14px;\n  color: ${colors.black};\n  text-align: center;\n  margin-top: -20px;\n`;\nexport const NavbarContainer = styled.nav`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  padding: 1rem 0;\n  position: fixed;\n  top: 0;\n  z-index: 1000;\n`;\n\n// Style each tab with an oval shape and primary red border\nexport const NavLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 18px;\n  padding: 10px 20px;\n  border-radius: 50px; // Oval shape\n  background-color: transparent;\n  border: 2px solid ${colors.primary}; // Primary red border\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: ${colors.primary}; // Fill the background with primary red on hover\n    color: white;\n  }\n`;\nexport const IntroText = styled.p`\n  font-size: 20px;\n  color: ${colors.black};\n  margin: 0;\n  padding-top:120px;\n`;\n\n// Text styling for name\nexport const NameText = styled.h1`\n  font-family: 'Roboto';\n  font-size: 80px; /* Adjust size as needed */\n  font-weight: bold;\n  color: ${colors.black};\n  margin: 10px 0 0 0; /* Margin adjustment */\n  padding-top: \n`;\nexport const AssignmentNameText = styled.h1`\n  font-family: 'Roboto';\n  font-size: 30px; /* Adjust size as needed */\n  font-weight: bold;\n  color: ${colors.black};\n  margin: 10px 0 0 0; /* Margin adjustment */\n  padding-top: \n`;\nexport const InfoText = styled.p`\n  font-size: 15px;\n  color: ${colors.black};\n  margin: 0;\n  padding-top:20px;\n`;\nexport const GreenButton = styled.a`\n  text-decoration:none;\n  background-color: rgb(110, 195, 155); /* Green color */\n  color: black;\n  border: none;\n  border-radius: 4px;\n  margin-top:20px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #218838; /* Darker green on hover */\n  }\n\n  &:active {\n    background-color: #1e7e34; /* Even darker green when clicked */\n  }\n\n  &:disabled {\n    background-color: #c3e6cb; /* Light green when disabled */\n    cursor: not-allowed;\n  }\n`;\n\n// Text container that takes up two-thirds of LeftContainer\nexport const LargeTextContainer = styled.div`\n  flex-basis: 40%; /* Takes up two-thirds of the LeftContainer */\n  font-size: 20px; /* Larger font size */\n  line-height: 1.3; /* Adjust line-height for better readability */\n  color: ${colors.darkGray}; /* Darker gray for readability */\n  padding: 20px;\n  background-color: ${colors.white}; /* Optional: white background to separate from light gray */\n  border-radius: 10px; /* Rounded corners to match the style */\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* Optional: subtle shadow for a clean, elevated look */\n`;\n\n// Example usage of the text within LeftContainer\nexport const StyledParagraph = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-bottom: 20px;\n  color: ${colors.darkGray}; /* Match the text color to the theme */\n  text-align: justify; /* Justify text for a clean, professional appearance */\n`;","map":{"version":3,"names":["styled","Link","colors","primary","secondary","complementary","darkGray","lightGray","white","yellow","blue","PageContainer","div","RowContainer","LeftContainer","RightContainer","ImageContainer","CaptionContainer","black","NavbarContainer","nav","NavLink","IntroText","p","NameText","h1","AssignmentNameText","InfoText","GreenButton","a","LargeTextContainer","StyledParagraph"],"sources":["/Users/aidenfockens/Documents/CS506-work/aidenfockens.github.io/src/components/Styles.js"],"sourcesContent":["\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n\n\nexport const colors = {\n    primary: '#D32F2F',\n    secondary: '#FFCDD2',\n    complementary: '#388E3C',\n    darkGray: '#333333',\n    lightGray: '#E0E0E0',\n    white: '#FFFFFF',\n    yellow: '#FBC02D',\n    blue: '#0288D1',\n  };\n\n// Main content container for each page\n\n\nexport const PageContainer = styled.div`\n  padding-top: 4rem; /* Space for the fixed navbar */\n  display: flex;  \n  flex-direction:column;\n  justify-content: space-between;\n  margin: 0 auto;\n  max-width: 1200px; /* Limit max-width for larger screens */\n`;\n\n\nexport const RowContainer = styled.div`\n  display: flex;\n  flex-direction: row; /* Place LeftContainer and RightContainer side by side */\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 20px; /* Space between assignment rows */\n`;\n\n// Left container for text\nexport const LeftContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n  background-color: ${colors.lightGray};\n  border-radius: 20px 0 0 20px;\n`;\n\n// Right container for images\nexport const RightContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${colors.lightGray};\n  border-radius: 0 20px 20px 0;\n`;\n\n// Image container\nexport const ImageContainer = styled.div`\n  width: 80%;\n  max-width: 600px; /* Max-width for images */\n  margin-bottom: 20px;\n  \n  img {\n    width: 100%;\n    height: auto;\n    border-radius: 8px; /* Optional: rounded corners for the image */\n  }\n`;\n\n// Caption container for text below the image\nexport const CaptionContainer = styled.div`\n  font-size: 14px;\n  color: ${colors.black};\n  text-align: center;\n  margin-top: -20px;\n`;\n\n\nexport const NavbarContainer = styled.nav`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  padding: 1rem 0;\n  position: fixed;\n  top: 0;\n  z-index: 1000;\n`;\n\n// Style each tab with an oval shape and primary red border\nexport const NavLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 18px;\n  padding: 10px 20px;\n  border-radius: 50px; // Oval shape\n  background-color: transparent;\n  border: 2px solid ${colors.primary}; // Primary red border\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: ${colors.primary}; // Fill the background with primary red on hover\n    color: white;\n  }\n`;\n\n\nexport const IntroText = styled.p`\n  font-size: 20px;\n  color: ${colors.black};\n  margin: 0;\n  padding-top:120px;\n`;\n\n// Text styling for name\nexport const NameText = styled.h1`\n  font-family: 'Roboto';\n  font-size: 80px; /* Adjust size as needed */\n  font-weight: bold;\n  color: ${colors.black};\n  margin: 10px 0 0 0; /* Margin adjustment */\n  padding-top: \n`;\n\nexport const AssignmentNameText = styled.h1`\n  font-family: 'Roboto';\n  font-size: 30px; /* Adjust size as needed */\n  font-weight: bold;\n  color: ${colors.black};\n  margin: 10px 0 0 0; /* Margin adjustment */\n  padding-top: \n`;\n\nexport const InfoText = styled.p`\n  font-size: 15px;\n  color: ${colors.black};\n  margin: 0;\n  padding-top:20px;\n`;\n\n\nexport const GreenButton = styled.a`\n  text-decoration:none;\n  background-color: rgb(110, 195, 155); /* Green color */\n  color: black;\n  border: none;\n  border-radius: 4px;\n  margin-top:20px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #218838; /* Darker green on hover */\n  }\n\n  &:active {\n    background-color: #1e7e34; /* Even darker green when clicked */\n  }\n\n  &:disabled {\n    background-color: #c3e6cb; /* Light green when disabled */\n    cursor: not-allowed;\n  }\n`;\n\n// Text container that takes up two-thirds of LeftContainer\nexport const LargeTextContainer = styled.div`\n  flex-basis: 40%; /* Takes up two-thirds of the LeftContainer */\n  font-size: 20px; /* Larger font size */\n  line-height: 1.3; /* Adjust line-height for better readability */\n  color: ${colors.darkGray}; /* Darker gray for readability */\n  padding: 20px;\n  background-color: ${colors.white}; /* Optional: white background to separate from light gray */\n  border-radius: 10px; /* Rounded corners to match the style */\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); /* Optional: subtle shadow for a clean, elevated look */\n`;\n\n// Example usage of the text within LeftContainer\nexport const StyledParagraph = styled.p`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  margin-bottom: 20px;\n  color: ${colors.darkGray}; /* Match the text color to the theme */\n  text-align: justify; /* Justify text for a clean, professional appearance */\n`;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}